# # Copyright (C) 2018 Intel Corporation
# #
# # SPDX-License-Identifier: MIT

# from .base import *

# # SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True

# INSTALLED_APPS += [
#     'django_extensions',
# ]

# ALLOWED_HOSTS.append('testserver')

# # Django-sendfile:
# # https://github.com/johnsensible/django-sendfile
# SENDFILE_BACKEND = 'sendfile.backends.development'

# # Database
# # https://docs.djangoproject.com/en/2.0/ref/settings/#databases

# # DATABASES = {
# #     'default': {
# #     'ENGINE': 'djongo',
# #     'NAME': 'new_adas',
# #     'HOST': '127.0.0.1',
# #     'PORT': 27017,
# #     }
# # }
# # DATABASES = {
# #    'default': {
# #    'ENGINE': 'djongo',
# #    'NAME': 'new_adas',
# #    'ENFORCE_SCHEMA':False,
# #    'CLIENT':{
# #        'host':'mongodb://admin:pass@local:27017/admin?authSource=admin'
# # }
# # }
# # }
# # ALLOWED_HOSTS=['*']
# DATABASES = {
#     'default': {
#         # 'ENGINE': 'django.db.backends.sqlite3',
#         # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#         'ENGINE': 'djongo',
#         'ENFORCE_SCHEMA': True,
#         'NAME': 'django_mongodb_docker',
#         'HOST': 'mongodb',
#         'PORT': 27017,
#         'USER': 'root',
#         'PASSWORD': 'mongoadmin',
#         'AUTH_SOURCE': 'admin',
#         'AUTH_MECHANISM': 'SCRAM-SHA-1',
#     }
# }
# ALLOWED_HOSTS=['*']

# # Cross-Origin Resource Sharing settings for CVAT UI
# UI_SCHEME = os.environ.get('UI_SCHEME', 'http')
# UI_HOST = os.environ.get('UI_HOST', 'localhost')
# UI_PORT = os.environ.get('UI_PORT', 3000)
# CORS_ALLOW_CREDENTIALS = True
# CSRF_TRUSTED_ORIGINS = [UI_HOST]
# UI_URL = '{}://{}'.format(UI_SCHEME, UI_HOST)

# if UI_PORT and UI_PORT != '80':
#     UI_URL += ':{}'.format(UI_PORT)
# # set UI url to redirect to after successful e-mail confirmation
# ACCOUNT_EMAIL_CONFIRMATION_ANONYMOUS_REDIRECT_URL = '{}/auth/email-confirmation'.format(UI_URL)

# CORS_ORIGIN_WHITELIST = [UI_URL]
# CORS_REPLACE_HTTPS_REFERER = True



# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_HOST_USER = 'adasltts@gmail.com'
# EMAIL_HOST_PASSWORD = 'ibahsrokbbtuzsxs'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# DEFAULT_FROM_EMAIL = 'Mail from ADAS team <noreply@ltts.com>'

# GOOGLE_OAUTH2_CLIENT_ID ='179747056513-6htt24u0nrclke33f6lifn9bnivmiunp.apps.googleusercontent.com'
# GOOGLE_OAUTH2_CLIENT_SECRET ='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'

"""
Django settings for django_mongodb_docker project.

Generated by 'django-admin startproject' using Django 2.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'hgvr2wxx74)l=!mtx((y3z*_w1kj&x%ken-e5gyd@u0)yd@g9t'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'django_mongodb_docker.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_mongodb_docker.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        'ENGINE': 'djongo',
        'ENFORCE_SCHEMA': True,
        'NAME': 'django_mongodb_docker',
        'HOST': 'mongodb',
        'PORT': 27017,
        'USER': 'root',
        'PASSWORD': 'mongoadmin',
        'AUTH_SOURCE': 'admin',
        'AUTH_MECHANISM': 'SCRAM-SHA-1',
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'


